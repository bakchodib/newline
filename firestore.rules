rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Default-deny all access
    match /{document=**} {
      allow read, write: if false;
    }

    // Allow any authenticated user to read/write to these collections.
    // This is a good starting point. For production, you would add
    // role-based checks (e.g., allow create, update, delete: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';)
    match /users/{userId} {
      allow read, write: if request.auth != null;
    }

    match /customers/{customerId} {
      allow read, write: if request.auth != null;
    }
    
    match /loans/{loanId} {
      allow read, write: if request.auth != null;
    }

    match /emis/{emiId} {
        allow read, write: if request.auth != null;
    }
    
    match /loanApplications/{applicationId} {
        allow read, write: if request.auth != null;
    }
  }
}
